networks:
  no-internet:
    driver: bridge
    internal: true # pas d'accès internet

  internal-fixed:
    driver: bridge
    internal: true # pas d'accès internet
    ipam:
      config:
        - subnet: 172.125.0.0/24

  custom-network:
    driver: bridge

  mcp-network:
    driver: bridge
    internal: true # pas d'accès internet

volumes:
  comfyui-inputs:
  ollama:
  open-webui:
  portainer_data:
  immich-model-cache:
  neko_data:
  hyphanet_data:

services:

  mcpo:
    image: ghcr.io/open-webui/mcpo:main
    container_name: mcpo-server
#    ports:
#      - "8001:8000"
    volumes:
      - ../mcpo-config.json:/app/config.json:ro
    command: >
      --port 8000
      --config /app/config.json
#      --api-key "top-secret"
    restart: unless-stopped
    networks:
      - custom-network
      - mcp-network

  docker-download-models:
    image: ghcr.io/veka-server/docker-download-models:latest
    container_name: docker-download-models
    volumes:
      - /home/veka/models:/models
    restart: no

  dns:
    build:
      context: https://github.com/veka-server/docker-dns.git#main
    container_name: dns
    ports:
      - "53:53/udp"
      - "53:53/tcp"
    networks:
      - custom-network
    restart: unless-stopped
    
  dnsrelay:
    image: 4km3/dnsmasq:latest
    container_name: dnsrelay
    command:
      - --no-daemon
      - --log-queries
      - --server=192.168.1.182
      - --listen-address=0.0.0.0
      - --bind-interfaces
      - --address=/.loc.ovh/172.125.0.12
    restart: unless-stopped
    networks:
      internal-fixed:
        ipv4_address: 172.125.0.11
      custom-network:

  nginx-reverse-proxy:
    image: ghcr.io/veka-server/docker-nginx-reverse-proxy:latest
    container_name: nginx-reverse-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /home/veka/nginx-ssl:/etc/nginx/ssl
      - /home/veka/nginx-htpasswd:/etc/nginx/.htpasswd:ro 
    restart: unless-stopped
    networks:
      internal-fixed:
        ipv4_address: 172.125.0.12
      no-internet:
      custom-network:

  comfyui:
    image: ghcr.io/veka-server/docker-comfyui:latest
    container_name: comfyui
    ports:
      - "8188:8188"
    volumes:
      - /home/veka/models/checkpoints:/app/comfyui/models/checkpoints
      - /home/veka/models/clip:/app/comfyui/models/clip
      - /home/veka/models/clip_vision:/app/comfyui/models/clip_vision
      - /home/veka/models/unet:/app/comfyui/models/unet
      - /home/veka/models/vae:/app/comfyui/models/vae
      - /home/veka/models/loras:/app/comfyui/models/loras
      - /home/veka/models/upscale_models:/app/comfyui/models/upscale_models
      - /home/veka/models/controlnet:/app/comfyui/models/controlnet
      - /home/veka/models/output:/app/comfyui/output
      - /home/veka/models/LLM:/app/comfyui/models/LLM
      - /home/veka/models/diffusion_models:/app/comfyui/models/diffusion_models
      - /home/veka/models/text_encoders:/app/comfyui/models/text_encoders
      - /home/veka/models/Joy_caption_two/cgrkzexw-599808:/app/comfyui/models/Joy_caption_two
      - comfyui-inputs:/app/comfyui/input:rw
      - /home/veka/models/workflow:/app/comfyui/user/default/workflows
    networks:
      - no-internet
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

  open-webui-standalone:
    image: ghcr.io/open-webui/open-webui:main
    container_name: open-webui-standalone
    environment:
      - OLLAMA_BASE_URL=http://ollama:11434
      - ENABLE_OPENAI_API=0
      - HF_HUB_OFFLINE=1
      - OFFLINE_MODE=1
    volumes:
      - ../open-webui:/app/backend/data
    ports:
      - "8080:8080"
    networks:
      - no-internet
      - mcp-network
    restart: unless-stopped

  database:
    container_name: immich_postgres
    image: ghcr.io/immich-app/postgres:14-vectorchord0.4.3-pgvectors0.2.0@sha256:32324a2f41df5de9efe1af166b7008c3f55646f8d0e00d9550c16c9822366b4a
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
      POSTGRES_INITDB_ARGS: '--data-checksums'
      # Uncomment the DB_STORAGE_TYPE: 'HDD' var if your database isn't stored on SSDs
      # DB_STORAGE_TYPE: 'HDD'
    volumes:
      # Do not edit the next line. If you want to change the database storage location on your system, edit the value of DB_DATA_LOCATION in the .env file
      - ${DB_DATA_LOCATION}:/var/lib/postgresql/data
    shm_size: 128mb
    restart: always
    networks:
      - no-internet
      
  immich-server:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    # extends:
    #   file: hwaccel.transcoding.yml
    #   service: cpu # set to one of [nvenc, quicksync, rkmpp, vaapi, vaapi-wsl] for accelerated transcoding
    volumes:
      # Do not edit the next line. If you want to change the media storage location on your system, edit the value of UPLOAD_LOCATION in the .env file
      - ${UPLOAD_LOCATION}:/data
      - /etc/localtime:/etc/localtime:ro
      - /home/veka/models/output:/upload:ro
    env_file:
      - .env
    ports:
      - '2283:2283'
    depends_on:
      - redis
      - database
    restart: always
    healthcheck:
      disable: false
    networks:
      - no-internet

  immich-machine-learning:
    container_name: immich_machine_learning
    # For hardware acceleration, add one of -[armnn, cuda, rocm, openvino, rknn] to the image tag.
    # Example tag: ${IMMICH_VERSION:-release}-cuda
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}
    # extends: # uncomment this section for hardware acceleration - see https://immich.app/docs/features/ml-hardware-acceleration
    #   file: hwaccel.ml.yml
    #   service: cpu # set to one of [armnn, cuda, rocm, openvino, openvino-wsl, rknn] for accelerated inference - use the `-wsl` version for WSL2 where applicable
    volumes:
      - immich-model-cache:/cache
    env_file:
      - .env
    restart: always
    healthcheck:
      disable: false
    networks:
      - no-internet

  redis:
    container_name: immich_redis
    image: docker.io/valkey/valkey:8-bookworm@sha256:5b8f8c333bef895c925f56629d6ba90aea95a4f7391f62411e625267c600b19c
    healthcheck:
      test: redis-cli ping || exit 1
    restart: always
    networks:
      - no-internet

  explorer:
    image: hurlenko/filebrowser
    container_name: explorer
#    user: "${UID}:${GID}"
    environment:
      - FB_BASEURL=/filebrowser
    volumes:
      - /home/veka:/data/veka
      - /home/veka/config-explorer:/config
    networks:
      - no-internet
    restart: unless-stopped

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
#    ports:
#      - "8000:8000"
#      - "9443:9443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - no-internet
      - custom-network
    restart: unless-stopped

  tor:
    image: ghcr.io/veka-server/docker-tor-proxy:latest
    container_name: tor
#    ports:
#      - "9050:9050"
#      - "9051:9051"
#      - "8118:8118"
    restart: always
    networks:
      custom-network: # accees internet
      no-internet:

  brave:
    image: kasmweb/brave:1.17.0-rolling-weekly
    container_name: brave
    environment:
      VNC_PW: password
      LAUNCH_URL: http://hub.loc.ovh  # optionnel si custom_startup.sh lit cette variable
    ports:
      - "6901:6901"
    restart: unless-stopped
    shm_size: 4g
    networks:
      no-internet:
      internal-fixed:
        ipv4_address: 172.125.0.13
    dns:
      - 172.125.0.11

  browser-tor-novnc:
    image: ghcr.io/veka-server/docker-surf-no-vnc:main
    container_name: browser-tor-novnc
    restart: unless-stopped
    networks:
      no-internet:

  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    environment:
      - OLLAMA_KEEP_ALIVE=0
    ports:
      - "11434:11434"
    volumes:
      - ../ollama:/root/.ollama
    networks:
      - no-internet
      - custom-network
    restart: unless-stopped

  hyphanet:
    container_name: hyphanet
    build:
      context: https://github.com/PoulLorca/hyphanet-docker.git#main
      args:
        HYPHANET_VERSION: "1503"
    restart: always
    volumes:
      - hyphanet_data:/data
    networks:
      - custom-network

  minecraft:
    image: itzg/minecraft-server:latest
    container_name: minecraft
    ports:
      - "25565:25565"
    environment:
      EULA: "TRUE"
      MAX_PLAYERS: "20"                 # Nombre max de joueurs
      MOTD: "Serveur Veka"  # Nom affiché dans la liste
      ENFORCE_WHITELIST: "TRUE"         # Force la whitelist
      WHITELIST: "vekam,EmilieJasmine14"      # Liste des comptes autorisés
      OPS: "vekam"                # Admins (opérateurs)
      ONLINE_MODE: "TRUE"               # Authentification Mojang (évite besoin d’un mot de passe)
      DIFFICULTY: "normal"         # peaceful easy normal hard
      VERSION: "1.21.8"
      MODE: "survival"      # survival , creative, adventure, spectator
      PVP: "true"
      LEVEL_TYPE: "DEFAULT"    # DEFAULT, FLAT, LARGEBIOMES, AMPLIFIED, CUSTOMIZED
      SERVER_PORT: "25565"
    volumes:
      - ../minecraft-data:/data
    restart: unless-stopped

  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    # Vérifie toutes les 3600 secondes (1 heure) et supprime les anciennes images
    command: --interval 3600 --cleanup


#  ai-toolkit:
#    image: ostris/aitoolkit:latest
#    restart: unless-stopped
#    ports:
#      - "8675:8675"
#    volumes:
#      - ../cache_huggingface_hub:/root/.cache/huggingface/hub
#      - ../aitk_db.db:/app/ai-toolkit/aitk_db.db
#      - ../ai-toolkit-datasets:/app/ai-toolkit/datasets
#      - ../ai-toolkit-output:/app/ai-toolkit/output
#      - ../ai-toolkit-config:/app/ai-toolkit/config
#    environment:
#      - AI_TOOLKIT_AUTH=test
#      - NODE_ENV=production
#      - TZ=UTC
#    deploy:
#      resources:
#        reservations:
#          devices:
#            - driver: nvidia
#              count: all
#              capabilities: [gpu]

